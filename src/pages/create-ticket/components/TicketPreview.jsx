import React from 'react';
import Icon from '../../../components/AppIcon';

const TicketPreview = ({ formData, estimatedResponseTime, autoGeneratedTags }) => {
  const getPriorityColor = (priority) => {
    switch (priority) {
      case 'urgent': return 'text-error bg-error/10 border-error/20';
      case 'high': return 'text-warning bg-warning/10 border-warning/20';
      case 'medium': return 'text-primary bg-primary/10 border-primary/20';
      case 'low': return 'text-muted-foreground bg-muted border-border';
      default: return 'text-muted-foreground bg-muted border-border';
    }
  };

  const getCategoryIcon = (category) => {
    switch (category) {
      case 'billing': return 'CreditCard';
      case 'technical': return 'Settings';
      case 'shipping': return 'Truck';
      case 'other': return 'HelpCircle';
      default: return 'Ticket';
    }
  };

  const formatCategory = (category) => {
    switch (category) {
      case 'billing': return 'Billing & Payments';
      case 'technical': return 'Technical Support';
      case 'shipping': return 'Shipping & Delivery';
      case 'other': return 'General Inquiry';
      default: return 'Uncategorized';
    }
  };

  if (!formData?.title && !formData?.description) {
    return (
      <div className="bg-surface rounded-lg border border-border p-6">
        <h3 className="text-lg font-medium text-foreground mb-4">Ticket Preview</h3>
        <div className="text-center py-12">
          <Icon name="Eye" size={48} className="text-muted-foreground mx-auto mb-4" />
          <p className="text-muted-foreground">
            Start filling out the form to see a preview of your ticket
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-surface rounded-lg border border-border p-6">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-medium text-foreground">Ticket Preview</h3>
        <div className="flex items-center space-x-2 text-sm text-muted-foreground">
          <Icon name="Eye" size={16} />
          <span>Agent View</span>
        </div>
      </div>
      <div className="space-y-4">
        {/* Ticket Header */}
        <div className="border border-border rounded-lg p-4 bg-muted/30">
          <div className="flex items-start justify-between mb-3">
            <div className="flex-1">
              <h4 className="font-medium text-foreground text-base leading-tight">
                {formData?.title || 'Untitled Ticket'}
              </h4>
              <div className="flex items-center space-x-4 mt-2 text-sm text-muted-foreground">
                <span>ID: #TK-{Date.now()?.toString()?.slice(-6)}</span>
                <span>â€¢</span>
                <span>Created: {new Date()?.toLocaleDateString()}</span>
              </div>
            </div>
            <div className={`px-2 py-1 rounded-full text-xs font-medium border ${getPriorityColor(formData?.priority)}`}>
              {formData?.priority?.charAt(0)?.toUpperCase() + formData?.priority?.slice(1) || 'Medium'}
            </div>
          </div>

          {/* Category and Tags */}
          <div className="flex flex-wrap items-center gap-2">
            {formData?.category && (
              <div className="flex items-center space-x-1 bg-primary/10 text-primary px-2 py-1 rounded-md text-xs">
                <Icon name={getCategoryIcon(formData?.category)} size={12} />
                <span>{formatCategory(formData?.category)}</span>
              </div>
            )}
            
            {autoGeneratedTags && autoGeneratedTags?.map((tag, index) => (
              <span
                key={index}
                className="bg-accent/10 text-accent px-2 py-1 rounded-md text-xs"
              >
                {tag}
              </span>
            ))}
          </div>
        </div>

        {/* Ticket Content */}
        <div className="space-y-3">
          <div>
            <label className="text-sm font-medium text-foreground block mb-2">
              Description:
            </label>
            <div className="bg-muted/30 border border-border rounded-lg p-3 min-h-[100px]">
              {formData?.description ? (
                <p className="text-sm text-foreground whitespace-pre-wrap leading-relaxed">
                  {formData?.description}
                </p>
              ) : (
                <p className="text-sm text-muted-foreground italic">
                  No description provided yet...
                </p>
              )}
            </div>
          </div>

          {/* Attachment */}
          {formData?.attachmentUrl && (
            <div>
              <label className="text-sm font-medium text-foreground block mb-2">
                Attachment:
              </label>
              <div className="bg-muted/30 border border-border rounded-lg p-3">
                <div className="flex items-center space-x-2">
                  <Icon name="Link" size={16} className="text-primary" />
                  <a
                    href={formData?.attachmentUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-sm text-primary hover:text-primary/80 underline break-all"
                  >
                    {formData?.attachmentUrl}
                  </a>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* Estimated Response Time */}
        {estimatedResponseTime && (
          <div className="bg-accent/5 border border-accent/20 rounded-lg p-3">
            <div className="flex items-center space-x-2">
              <Icon name="Clock" size={16} className="text-accent" />
              <div>
                <p className="text-sm font-medium text-foreground">
                  Estimated Response Time
                </p>
                <p className="text-xs text-muted-foreground">
                  {estimatedResponseTime}
                </p>
              </div>
            </div>
          </div>
        )}

        {/* AI Processing Info */}
        <div className="bg-primary/5 border border-primary/20 rounded-lg p-3">
          <div className="flex items-start space-x-2">
            <Icon name="Bot" size={16} className="text-primary mt-0.5" />
            <div>
              <p className="text-sm font-medium text-foreground">
                AI-Powered Processing
              </p>
              <p className="text-xs text-muted-foreground mt-1">
                Once submitted, our AI will automatically categorize your ticket, search for relevant solutions, and draft an initial response for agent review.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TicketPreview;